// Version of a cell that only contains the probability data.
// Since this data is constant after sim start it goes under the init category
class InitSimCell {
    constructor(row, col) {
        this.row = row;
        this.col = col;

        // Individual probabilities for each ship type to spawn in the day
        this.probDayCargoSpawn;
        this.probDayPatrolSpawn;
        this.probDayPirateSpawn;

        // Individual probabilities for each ship type to spawn at night, are the same by default
        this.probNightCargoSpawn;
        this.probNightPatrolSpawn;
        this.probNightPirateSpawn;
    }

    // For Debugging
    getIndexAsString() {
        return "Row: " + this.row + ", Col: " + this.col;
    }
}

// This class holds any data that is constant for the duration of the simulation after
// it has been started.
class InitSimData {
    constructor() {
        this.simRunTime = 24; // Specified in hours
        this.simDimensions = [100, 400]; // 100 rows by 400 columns 
        this.considerDayNight = false; // Specifies if individual day / night settings should be used
        this.cells = [];

        // Initialize the cell array
        for (let i = 0; i < this.simDimensions[0] * this.simDimensions[1]; i++) {
            this.cells.push(new InitSimCell(Math.floor(i / this.simDimensions[1]), i % this.simDimensions[1]));
        }
    }

    getInitCellAtIndex(row, col) {
        return this.cells[(row * this.simDimensions[1]) + (col)];
    }
}

class Simulation {
    constructor() {
        this.initialConditions = new InitSimData();
        this.frames = []; // Stores all the frames generated by the simulation so far
        this.frames.push(new Frame(0)); // Create an initial frame at time 0
    }
}